name: Build DSB_test

on:
  workflow_dispatch:

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4
        with:
          repository: aoxiang1221/sing-box
          ref: main
          path: repo

      - name: Checkout sing-box
        uses: actions/checkout@v4
        with:
          repository: PuerNya/sing-box
          ref: sfa-test
          path: sing-box
          fetch-depth: 0

      - name: Checkout sing-box-android
        uses: actions/checkout@v4
        with:
          repository: PuerNya/sing-box-for-android
          ref: test
          path: sing-box-for-android

      - name: Get latest go version 
        id: version 
        run: | 
          echo go_version=$(curl -s https://raw.githubusercontent.com/actions/go-versions/main/versions-manifest.json | grep -oE '"version": "[0-9]{1}.[0-9]{1,}(.[0-9]{1,})?"' | head -1 | cut -d':' -f2 | sed 's/ //g; s/"//g') >> $GITHUB_OUTPUT 

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ steps.version.outputs.go_version }}
          check-latest: true
          cache-dependency-path: |
            ./sing-box/go.sum
            ./sing-box-for-android/go.sum

      - name: Setup Java 
        uses: actions/setup-java@v3 
        with:
          java-version: '21'
          distribution: 'oracle'
          check-latest: true
          cache: 'gradle'

      - name: Get version and code
        run: |
          cd sing-box
          VERSION_NAME=$(CGO_ENABLED=0 go run ./cmd/internal/read_tag)
          VERSION_CODE=$(date +%y%m%d)
          echo ${VERSION_NAME}
          echo ${VERSION_CODE}
          echo "VERSION_NAME=${VERSION_NAME}" >> $GITHUB_ENV
          echo "VERSION_CODE=${VERSION_CODE}" >> $GITHUB_ENV

      - name: build sing-box aar
        run: |
          cd sing-box
          make lib_install
          TAGS="with_quic,with_grpc,with_ech,with_utls,with_reality_server,with_clash_api,with_gvisor"
          CGO_ENABLED=1 gomobile bind -v -androidapi 21 -javapkg=io.nekohasekai -libname=box -trimpath -ldflags "-X github.com/sagernet/sing-box/constant.Version=${{ env.VERSION_NAME }} -s -w -buildid=" -tags ${TAGS} ./experimental/libbox

      - name: move sing-box aar
        run: |
          mkdir ./sing-box-for-android/app/libs
          cp ./sing-box/libbox.aar ./sing-box-for-android/app/libs

          rm -rf ./sing-box-for-android/app/release.keystore
          cp ./repo/dsb/release.keystore ./sing-box-for-android/app

          sed -i 's/applicationId "io.nekohasekai.sfa"/applicationId "com.github.aoxiang.dsb.test"/' ./sing-box-for-android/app/build.gradle

          sed -i 's/android:targetPackage="io.nekohasekai.sfa"/android:targetPackage="com.github.aoxiang.dsb.test"/' ./sing-box-for-android/app/src/main/res/xml/shortcuts.xml

      - name: build dsb
        run: |
          cd ./sing-box-for-android

          touch local.properties
          echo VERSION_NAME=${{ env.VERSION_NAME }} >> local.properties
          echo VERSION_CODE=${{ env.VERSION_CODE }} >> local.properties
          echo KEYSTORE_PASS="12345678" >> local.properties
          echo ALIAS_NAME="aoxiang1221" >> local.properties
          echo ALIAS_PASS="12345678" >> local.properties

          ./gradlew :app:assemblePlayRelease && ./gradlew --stop

      - name: Release and upload assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: ${{ env.VERSION_NAME }}
          tag: ${{ env.VERSION_CODE }}
          file_glob: true
          file: ./sing-box-for-android/app/build/outputs/apk/play/release/*.apk

      - name: Remove old releases
        uses: dev-drprasad/delete-older-releases@v0.3.2
        with:
          keep_latest: 1
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
